# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2.1
jobs:
  jvm:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
      - image: localstack/localstack
        environment:
          SERVICES: s3,lambda
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "deps.edn" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install Clojure
          command: |
            wget -nc https://download.clojure.org/install/linux-install-1.10.3.1058.sh
            chmod +x linux-install-1.10.3.1058.sh
            sudo ./linux-install-1.10.3.1058.sh
      - run:
          name: Run JVM tests
          environment:
            AWS_ACCESS_KEY_ID: test
            AWS_SECRET_ACCESS_KEY: test
            AWS_REGION: eu-west-1
          command: |
            script/test
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}
  linux:
    resource_class: large # localstack needs more mem
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
      - image: localstack/localstack
        environment:
          SERVICES: s3
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.3.0
      APP_PLATFORM: linux # used in release script
      APP_TEST_ENV: native
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
            - linux-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            wget https://download.clojure.org/install/linux-install-1.10.3.1058.sh
            chmod +x linux-install-1.10.3.1058.sh
            sudo ./linux-install-1.10.3.1058.sh
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install gcc g++ zlib1g-dev
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-21.3.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.3.0/graalvm-ce-java11-linux-amd64-21.3.0.tar.gz
              tar xzf graalvm-ce-java11-linux-amd64-21.3.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Install bb for test
          command: |
            mkdir bb
            bash <(curl -sL https://raw.githubusercontent.com/borkdude/babashka/master/install) \
              --dir bb --download-dir bb
      - run:
          name: Run test
          environment:
            AWS_ACCESS_KEY_ID: test
            AWS_SECRET_ACCESS_KEY: test
            AWS_REGION: eu-west-1
          command: PATH=$PATH:bb script/test
      - run:
          name: Release
          command: |
            .circleci/script/release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-21.3.0
          key: linux-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  linux-static:
    resource_class: large # localstack needs more mem
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
      - image: localstack/localstack
        environment:
          SERVICES: s3
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.3.0
      BABASHKA_STATIC: "true"
      BABASHKA_MUSL: "true"
      APP_PLATFORM: linux # used in release script
      APP_TEST_ENV: native
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
            - linux-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            wget https://download.clojure.org/install/linux-install-1.10.3.1058.sh
            chmod +x linux-install-1.10.3.1058.sh
            sudo ./linux-install-1.10.3.1058.sh
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install g++
            sudo -E script/setup-musl
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-21.3.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.3.0/graalvm-ce-java11-linux-amd64-21.3.0.tar.gz
              tar xzf graalvm-ce-java11-linux-amd64-21.3.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Install bb for test
          command: |
            mkdir bb
            bash <(curl -sL https://raw.githubusercontent.com/borkdude/babashka/master/install) \
              --dir bb --download-dir bb
      - run:
          name: Run test
          environment:
            AWS_ACCESS_KEY_ID: test
            AWS_SECRET_ACCESS_KEY: test
            AWS_REGION: eu-west-1
          command: PATH=$PATH:bb script/test
      - run:
          name: Release
          command: |
            .circleci/script/release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-21.3.0
          key: linux-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  linux-static-aarch64:
    machine:
      enabled: true
      image: ubuntu-2004:202101-01
    resource_class: arm.large
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.3.0
      BABASHKA_STATIC: "true"
      APP_PLATFORM: linux # used in release script
      APP_ARCH: aarch64 # used in release script
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
            rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
            - linux-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            wget https://download.clojure.org/install/linux-install-1.10.3.1058.sh
            chmod +x linux-install-1.10.3.1058.sh
            sudo ./linux-install-1.10.3.1058.sh
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install g++
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-21.3.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.3.0/graalvm-ce-java11-linux-aarch64-21.3.0.tar.gz
              tar xzf graalvm-ce-java11-linux-aarch64-21.3.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Release
          command: |
            .circleci/script/release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-21.3.0
          key: linux-aarch64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  mac:
    macos:
      xcode: "12.0.0"
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-21.3.0/Contents/Home
      APP_PLATFORM: macos # used in release script
      APP_TEST_ENV: native
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf ~/.gitconfig
      - restore_cache:
          keys:
            - mac-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            .circleci/script/install-clojure /usr/local
      - run:
          name: Download GraalVM
          command: |
            cd ~
            ls -la
            if ! [ -d graalvm-ce-java11-21.3.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.3.0/graalvm-ce-java11-darwin-amd64-21.3.0.tar.gz
              tar xzf graalvm-ce-java11-darwin-amd64-21.3.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Install bb for test
          command: |
            mkdir bb
            bash <(curl -sL https://raw.githubusercontent.com/borkdude/babashka/master/install) \
              --dir bb --download-dir bb
      - run:
          name: Run test
          command: PATH=$PATH:bb script/test
      - run:
          name: Release
          command: |
            .circleci/script/release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-21.3.0
          key: mac-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  deploy:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "deps.edn" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: .circleci/script/deploy
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}

workflows:
  version: 2
  ci:
    jobs:
      - jvm
      - linux
      - linux-static
      - linux-static-aarch64
      - mac
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - jvm
            - linux
            - mac
